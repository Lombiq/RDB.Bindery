@functions {
    // Taken from The Theme Machine, allows for collapsable widget areas.
    string CalcuClassify(string[] zoneNames, string classNamePrefix)
    {
        var zoneCounter = 0;
        var zoneNumsFilled = string.Join("", zoneNames.Select(zoneName => { ++zoneCounter; return Model[zoneName] != null ? zoneCounter.ToString() : ""; }).ToArray());
        return HasText(zoneNumsFilled) ? classNamePrefix + zoneNumsFilled : "";
    }
}

@{
    /*  Meta Setup
        ================================================================ */

    SetMeta(name: "viewport", content: "width=device-width,initial-scale=1");

    /*  Head Includes
        ================================================================ */

    Style.Include("//fonts.googleapis.com/css?family=Open+Sans:400italic,400,700,300");
    Style.Require("RDB.Bindery.Styles");

    Script.Require("jQuery");
    Script.Require("RDB.Bindery.Scripts");

    /*  Widgetised Zone Prep.
        ================================================================ */

    var asideClass = CalcuClassify(new[] {"AsideFirst", "AsideSecond"}, "aside-");
    var triplesClass = CalcuClassify(new[] {"TripleFirst", "TripleSecond", "TripleThird"}, "triple-");
    var footerTwinsClass = CalcuClassify(new[] {"FooterTwinsFirst", "FooterTwinsSecond"}, "footer-twins-");

    if (HasText(asideClass)) 
    {
        Model.Classes.Add(asideClass);
    }

    if (HasText(triplesClass))
    {
        Model.Classes.Add(triplesClass);
    }
    
    if (HasText(footerTwinsClass))
    {
        Model.Classes.Add(footerTwinsClass);
    }

    /*  Layout Wrapper
        ================================================================ */

    Model.Id = "layout-wrapper";
    var tag = Tag(Model, "div");

    /*  Ad Hoc Shape Inserts
        ================================================================ */

    WorkContext.Layout.Header.Add(New.Branding(), "1");

    WorkContext.Layout.Footer.Add(New.Copyright(), "1");
    WorkContext.Layout.Footer.Add(New.UserActions(), "2");

    WorkContext.Layout.Colophon.Add(New.PoweredBy(), "1");
}

@Display.ThemeSettings()

@tag.StartElement
    <header id="masthead" class="site-header" role="banner">
        <div class="container">
            <div class="row">
                @if (Model.Header != null) 
                {
                    @Display(Model.Header)
                }

                @if (Model.Navigation != null) 
                {
                    <button id="navigation-toggle" class="btn btn-xs">@T("Menu")</button>
                    @Display(Model.Navigation)
                }
            </div>
        </div>
    </header>

    <div id="content" role="main">
        <div class="container">
            <div class="row">
                @if (Model.BeforeMain != null) 
                {
                    @Display(Model.BeforeMain)
                }

                @if (Model.AsideFirst != null) 
                {
                    @Display(Model.AsideFirst)
                }

                <div id="main">
                    @if (Model.Messages != null) 
                    {
                        @Display(Model.Messages)
                    }

                    @if (Model.BeforeContent != null) 
                    {
                        @Display(Model.BeforeContent)
                    }

                    @Display(Model.Content)

                    @if (Model.AfterContent != null) 
                    {
                        @Display(Model.AfterContent)
                    }
                </div>

                @if (Model.AsideSecond != null) 
                {
                    @Display(Model.AsideSecond)
                }

                @if (Model.AfterMain != null) 
                {
                    @Display(Model.AfterMain)
                }
            </div>
        </div>
    </div>

    <div id="triples">
        <div class="container">
            <div class="row">
                @if (Model.TripleFirst != null) 
                {
                    @Display(Model.TripleFirst)
                }

                @if (Model.TripleSecond != null)
                {
                    @Display(Model.TripleSecond)
                }

                @if (Model.TripleThird != null)
                {
                    @Display(Model.TripleThird)
                }
            </div>
        </div>
    </div>

    <footer id="colophon" class="site-footer" role="contentinfo">
        @if (Model.FooterTwinsFirst != null || Model.FooterTwinsSecond != null)
        {
            <div id="footer-twins">
                <div class="container">
                    <div class="row">
                        @if (Model.FooterTwinsSecond != null)
                        {
                            @Display(Model.FooterTwinsSecond)
                        }
                        @if (Model.FooterFirst != null)
                        {
                            @Display(Model.FooterTwinsFirst)
                        }
                    </div>
                </div>
            </div>
        }
    
        <div class="site-meta">
            <div class="container">
                <div class="row">
                    @if (Model.Footer != null) 
                    {
                        @Display(Model.Footer)
                    }

                    @if (Model.Colophon != null) 
                    {
                        @Display(Model.Colophon)    
                    }
                </div>
            </div>
        </div>
    </footer>
@tag.EndElement